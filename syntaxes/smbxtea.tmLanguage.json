{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SMBX Tea",
	"scopeName": "source.smt",


	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#declare"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#expression"
		}
	],


	"repository": {
		"keywords": {
			"patterns": [
			{
					"include": "#support"
			},
			{
				"name": "keyword.control",
				"match": "\\b(As|Call|Case|Dim|Else|ElseIf|End|Export|For|GoTo|GoSub|If|next|Return|Script|Select|Step|Then|To|While|With)\\b"
			}]
		},
		"support" : {
			"patterns": [{
				"name": "keyword.support.buildin",
				"match": "\\b(Array|GVal|ReDim|Str|v|Val)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "\\\\."
				}
			]
		},
		"numeric":{
			"patterns": [{
				"name": "constant.numeric",
				"match": "\\b([0-9]+\\.?[0-9]*)\\b"
			}]
		},
		"comment": {
			"name" : "comment.line",
			"patterns": [
				{
					"name" : "comment.line",
					"match": "'.*$"
				}
			]
		},
		"buildin_type":{
			"patterns": [{
				"name": "storage.type",
				"match": "\\b(Integer|Double|Long|Byte)\\b"
			}]
		},
		"type":{
			"patterns": [{
				"include": "#buildin_type"
			}, {
				"name": "entity.name.type",
				"match": "\\b[_a-zA-Z][_a-zA-Z0-9]*\\b"
			}]
		},
		"identifier": {
			"patterns": [{
				"name": "entity.name",
				"match": "\\b[_a-zA-Z][_a-zA-Z0-9]*\\b"
			}]
		},
		"operators":{
			"patterns": [{
				"name": "keyword.operator",
				"match": "([+\\-\\*/<=>\\?\\!.]|\\bAnd\\b|\\bOr\\b|\\bNot\\b|\\bXor\\b|\\bEqv\\b|\\bImp\\b)"
			}]
		},
		"expression_constant" :{
			"patterns":[
				{
					"include" : "#numeric"
				},
				{
					"include" : "#strings"
				},
				{
					"include": "#operators"
				}
			]
		},
		"expression":{
			"patterns": [
			{
				"include": "#numeric"
			},
			{
				"include": "#strings"
			},
			{
				"include": "#call_function"
			},
			{
				"include": "#identifier"
			},
			{
				"include": "#operators"
			}]
		},


		"declare":{
			"patterns": [
				{
					"include": "#declare_variable"
				},
				{
					"include": "#declare_function"
				}
			]
		},
		"declare_variable":{
			"name": "meta.var.declare",
			"match": "(\\bDim\\s+)([_a-zA-Z][_a-zA-Z0-9]*)(\\s+As\\s+)([_a-zA-Z][_a-zA-Z0-9]*\\b)(.*$)",
			"captures": {
				"1":{
					"name":"keyword.control.define"
				},
				"2":{
					"patterns": [{
						"include": "#identifier"
					}]},
				"3":{
					"name":"keyword.control.define.type"
				},
				"4":{
					"patterns":[{
						"include": "#type"
					}]},
				"5":{
					"patterns": [{
						"include": "#expression"
					}]}
				}
		},
		"declare_function":{
			"name" : "meta.function.block",
			"begin": "((?:\\bExport\\s+)?(?:\\bScript\\s+))([_a-zA-Z][_a-zA-Z0-9]*)(\\([\\s\\S]*\\))",
			"end": "(\\bEnd\\s+Script\\b)",
			"beginCaptures": {
				"0":{
					"name": "declare.function.begin"
				},
				"1":{
					"name": "keyword.control.function"
				},
				"2":{
					"name": "entity.name.function",
					"patterns": [{
					"include": "#identifier"
				}]},
				"3":{
					"patterns": [{
						"include": "#declare_param"
				}]}
			},
			"endCaptures": {
				"0":{
					"name":"declare.function.end"
				},
				"1":{
					"name":"keyword.control.function"
				}
			},
			"patterns": [{
				"include": "#block"
			}]
		},
		"declare_param" : {
			"patterns": [{
				"name": "meta.function.parameters",
				"begin": "\\(",
				"end": "\\)",
				"patterns": [
					{
						"include": "#declare_params_return"
					},
					{
						"include": "#declare_params_variable"
					}
				]
			}]
		},
		"declare_params_variable":{
			"name": "meta.var.declare",
			"begin": "([_a-zA-Z][_a-zA-Z0-9]*)(\\s+As\\s+)([_a-zA-Z][_a-zA-Z0-9]*)([^,]*)",
			"end": "\\s*(\\,)",
			"beginCaptures": {
			"1":{
				"patterns": [{
					"include": "#identifier"
				}]},
			"2":{
				"name" : "keyword.control.define.type"
			},
			"3":{
				"patterns":[{
					"include": "#type"
				}]},
			"4":{
				"name" : "default",
				"patterns": [{
					"include": "#expression_constant"
				}]}
			}
		},
		"declare_params_return":{
			"name": "meta.return",
			"begin": "\\b(Return)\\s+([_a-zA-Z][_a-zA-Z0-9]*)",
			"end": "\\)",
			"beginCaptures": {
				"1":{
					"name":"keyword.control.function"
				},
				"2":{
					"patterns": [{
						"include": "#type"
				}]}
			}
		},


		"call_function":{
			"name": "meta.function.call.params",
			"begin": "([_a-zA-Z][_a-zA-Z0-9]*)\\(",
			"end": "\\)",
			"beginCaptures" : {
				"0" : {
					"name" : "function.call.start"
				},
				"1" : {
					"name" : "entity.name.function.call"
				}
			},
			"endCaptures" : {
				"0" : {
					"name" : "function.call.end"
				}
			},
			"patterns" : [{
				"patterns": [{
					"include": "#call_param"
				}]
			}]
		},
		"call_param":{
			"name" : "meta.function.call.param",
			"begin": "\\s*",
			"end": "(?![^\\)])|,",
			"patterns": [{
				"include": "#expression"
			}]
		},


		"block":{
			"name": "meta.block",
			"patterns": [{
				"include": "#comment"
			},
			{
				"include": "#declare_variable"
			},
			{
				"include": "#keywords"
			},
			{
				"include": "#exprssion"
			}]
		}
	}
}